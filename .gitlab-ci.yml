image: docker:19.03

stages:
#  - test
  - release
  - deploy

variables:
  # When using dind service we need to instruct docker, to talk with
  # the daemon started inside of the service. The daemon is
  # available with a network connection instead of the default
  # /var/run/docker.sock socket. docker:19.03-dind does this
  # automatically by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  #
  # Note that if you're using the Kubernetes executor, the variable should be set to
  # tcp://localhost:2376/ because of how the Kubernetes executor connects services
  # to the job container
  # DOCKER_HOST: tcp://localhost:2376/
  #
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  # Specify to Docker where to create the certificates, Docker will
  # create them automatically on boot, and will create
  # `/certs/client` that will be shared between the service and
  # build container.
  DOCKER_TLS_CERTDIR: "/certs"

test:
  stage: test
  image: node:10-alpine
  before_script:
    - npm install --progress=false
  script:
    - npm run test

release:
  stage: release
  only:
    - "master"
  before_script:
    - docker info
    - ./deploy/docker_login.sh
  script:
    - ./deploy/build_image.sh
  after_script:
    - ./deploy/docker_logout.sh

deploy:
  stage: deploy
  image: gitlab/dind:latest
  services:
    - docker:19.03-dind
  only:
    - "master"
  before_script:
    - apt-get update -y && apt-get install sshpass
  script:
    - ./deploy/pull_and_restart.sh
